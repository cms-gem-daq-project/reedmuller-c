%define _package reedmuller
%define _packagename %{_package}
%define _projectdir __projectdir__
%define _packagedir __packagedir__
%define _version __version__
%define _release __release__
%define _gitrev __gitrev__
%define _builddate __builddate__
%define _prefix  __prefix__
# %define _zynq_prefix  __zynq_prefix__
%define _tmppath /tmp
%define _platform __platform__
%define _author __author__
%define _summary __summary__
%define _url https://github.com/jsturdy/reedmuller-c
%define _buildarch __buildarch__
%define _arch __arch__

%define _unpackaged_files_terminate_build 0

#
# Binary RPM specified attributed (lib and bin)
#
Summary: %{_summary}
Name: %{_packagename}
Version: %{_version}
Release: %{_release}
Packager: %{_author}
# BuildArch: %{_buildarch}
# Arch: %{_buildarch}
License: Apache 2.0
Group: Libraries/Math
URL: %{_url}
BuildRoot: %{_tmppath}/%{_packagename}-%{_version}-%{_release}-buildroot
Prefix: %{_prefix}

%if 0%{?_requires}
Requires: __requires__
%endif

%if 0%{?_build_requires}
BuildRequires: __build_requires__
%endif

%description
__description__

#
# Devel RPM specified attributes (extension to binary rpm with include files)
#

# Do not check any files in lib/arm for requires
%global __requires_exclude_from ^%{_prefix}/lib/arm/.*$
# Do not check any files in bin/arm for requires
%global __requires_exclude_from ^%{_prefix}/bin/arm/.*$
# Do not check .so files in an arm-specific library directory for provides
%global __provides_exclude_from ^%{_prefix}/lib/arm/*\\.so$

%define add_arm_libs %( if [ -d 'lib/arm' ]; then echo "1" ; else echo "0"; fi )
%define is_arm  %( if [[ '__buildarch__' =~ "arm" ]]; then echo "1" ; else echo "0"; fi )
%define not_arm  %( if [[ ! '__buildarch__' =~ "arm" ]]; then echo "1" ; else echo "0"; fi )


%package -n %{_packagename}-devel
Summary:  Development package for %{_summary}
Group:    Libraries/Math
# Requires: %{_packagename}
# BuildRequires: %{_packagename}

%description -n %{_packagename}-devel
__description__

#
# Debuginfo RPM specified attributes (extension to binary rpm with include files)
#
%package -n %{_packagename}-debuginfo
Summary:  Debuginfo package for %{_summary}
Group:    Libraries/Math
Requires: %{_packagename}
# BuildRequires: %{_packagename}

%description -n %{_packagename}-debuginfo
__description__

#%pre

#%prep

#%setup 

#%build

#
# Prepare the list of files that are the input to the binary and devel RPMs
#
%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT%{_prefix}/{bin,lib}

if [ -d %{_packagedir}/lib ]; then
   cd %{_packagedir}/lib; \
   find . -name "*.so" -exec install -D -m 755 {} $RPM_BUILD_ROOT/%{_prefix}/lib/{} \;
fi

if [ -d %{_packagedir}/bin ]; then
   cd %{_packagedir}/bin; \
   find . -name "*" -exec install -D -m 755 {} $RPM_BUILD_ROOT/%{_prefix}/bin/{} \;
fi

if [[ ! %{_buildarch} =~ "arm" ]]; then
   echo "Building RPM for non-ARM architecture (%{_buildarch})";
   mkdir -p $RPM_BUILD_ROOT%{_prefix}/include;
   mkdir -p $RPM_BUILD_ROOT/usr/lib/debug%{_prefix}/lib;
   mkdir -p $RPM_BUILD_ROOT/usr/src/debug/%{_packagename}-%{_version};
   
   if [ -d %{_projectdir}/include ]; then \
      cd %{_projectdir}/include; \
      find . -name "*.h" -exec install -D -m 644 {} $RPM_BUILD_ROOT/%{_prefix}/include/{} \;
   fi
   
   if [ -d %{_projectdir}/src ]; then
      cd %{_projectdir}/src; \
      find . -name "*.c" -exec install -D -m 644 {} $RPM_BUILD_ROOT/usr/src/debug/%{_prefix}/src/{} \;
   fi
   
   if [ -e %{_projectdir}/ChangeLog ]; then
      install -m 644 %{_projectdir}/ChangeLog %{_packagedir}/rpm/RPMBUILD/BUILD/ChangeLog
   else
      touch %{_packagedir}/rpm/RPMBUILD/BUILD/ChangeLog
   fi
   
   if [ -e %{_projectdir}/README ]; then
      install -m 644 %{_projectdir}/README %{_packagedir}/rpm/RPMBUILD/BUILD/README
   else
      touch %{_packagedir}/rpm/RPMBUILD/BUILD/README
   fi
   
   if [ -e %{_projectdir}/MAINTAINER ]; then
      install -m 644 %{_projectdir}/MAINTAINER %{_packagedir}/rpm/RPMBUILD/BUILD/MAINTAINER
   else
      touch %{_packagedir}/rpm/RPMBUILD/BUILD/MAINTAINER
   fi
else
   echo "Building RPM for ARM architecture (%{_buildarch}), not packaging everything"
fi ## end check on x86_64 arch only

%clean
rm -rf $RPM_BUILD_ROOT

#
# Files that go in the binary RPM for the x86_64 machine
#
%files
%defattr(-,root,root,755)
# %{_prefix}/lib/lib%{_packagename}_%{_platform}_%{_buildarch}.so
%{_prefix}/lib/lib%{_packagename}.so

%dir
%attr(0755,root,root) %{_prefix}/bin
# %attr(0755,root,root) %{_prefix}/lib

#
# Files that go in the devel RPM
#
%files -n %{_packagename}-devel
%defattr(-,root,root,644)

%if %not_arm
%if %add_arm_libs
%attr(0755,root,root) %{_prefix}/lib/arm/lib%{_packagename}.so
%endif

%{_prefix}/include/*.h

%dir
# %attr(0755,root,root) %{_prefix}/include

%doc MAINTAINER ChangeLog README

#%changelog

%endif


# #
# # Files that go in the debuginfo RPM
# #
# %files -n %{_packagename}-debuginfo
# %defattr(-,root,root,755)

# %if %not_arm
# %{_prefix}/usr/lib/debug/*
# %{_prefix}/usr/src/debug/*

# %doc MAINTAINER ChangeLog README

# %dir
# %attr(0755,root,root) /usr/lib/debug

# # %changelog
# %endif
